enum JoypadKey: u8 {
    Right   = 0b0000_0001
    Left    = 0b0000_0010
    Up      = 0b0000_0100
    Down    = 0b0000_1000
    A       = 0b0001_0000
    B       = 0b0010_0000
    Select  = 0b0100_0000
    Start   = 0b1000_0000
}

struct Joypad {
    select: u8
    matrix: u8

    public function init() => Joypad(select: 0x00u8, matrix: 0xFFu8)

    public function read(this, addr: u16) -> u8 {
        guard addr == 0xff00 else {
            eprintln("Joypad memory access out of bound")
            abort()
        }

        if (.select & 0b0010_0000) == 0x00u8 {
            return .select | (.matrix & 0x0Fu8)
        }

        if (.select & 0b0010_0000) == 0x00u8 {
            return .select | (.matrix >> 4)
        }

        return .select
    }

    public function write(mut this, addr: u16, value: u8) {
        guard addr == 0xFF00 else  {
            eprintln("ASSERTION FAILED, IO WRITE OUTSIDE 0xFF00")
            abort()
        }
        .select = value
    }
}